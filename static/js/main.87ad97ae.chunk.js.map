{"version":3,"sources":["components/app/ThemeProvider.js","components/error/CustomError.js","i18n.js","components/error/ErrorBoundary.js","components/user/UserContext.js","components/user/userHooks.js","components/user/userUtils.js","components/Header.js","components/AppShell.js","components/user/UserProvider.js","mock/mockUtils.js","mock/db.js","mock/userMock.js","mock/postMock.js","mock/serverHandlers.js","components/followingList/followingListHooks.js","components/user/UsersList.js","components/followingList/FollowingList.js","components/header/ButtonBack.js","screens/FollowScreen.js","components/post/PostShell.js","components/post/Post.js","components/postsList/postsListHooks.js","components/post/PostLoading.js","components/postsList/PostsListLoading.js","components/postsList/PostsList.js","screens/ProfileScreen.js","components/user/SearchUsers.js","screens/SearchUsersScreen.js","components/createPost/CreatePost.js","components/createPost/createPostHooks.js","screens/WallScreen.js","Router.js","mock/mockServiceWorker.js","App.js","serviceWorker.js","index.js"],"names":["isDarkMode","window","matchMedia","matches","theme","createMuiTheme","palette","primary","main","secondary","type","ThemeProvider","props","CssBaseline","children","CustomError","message","Error","LocalizedStrings","en","latestPosts","home","notFollowingAnybodySelf","notFollowingAnybody","addPeople","searchPeopleInput","follow","unfollow","whatsHappening","post","somethingWentWrong","reloadPage","reload","userNotFound","emptyUsers","userNotFoundDescription","following","noPosts","FallbackComponent","getFallbackComponent","onReset","location","onError","console","info","error","resetErrorBoundary","heading","i18n","text","Dialog","open","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","aria-describedby","maxWidth","fullWidth","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","userContext","React","createContext","useLoggedUser","useContext","useUsers","params","options","useQuery","key","body","a","fetch","method","JSON","stringify","headers","response","json","users","unique","length","enabled","manual","useUser","getProfileUrl","user","handle","getFullName","firstName","lastName","join","Header","classes","useStyles","loggedUser","AppBar","position","color","Toolbar","leftButton","Typography","variant","className","title","IconButton","to","component","Link","Avatar","src","avatar","makeStyles","root","flexGrow","marginRight","spacing","AppShell","Box","display","flexDirection","height","header","flex","justifyContent","p","UserProvider","Provider","isLoading","isError","value","data","getDb","__lookiterDb","matchAll","resource","filter","r","Object","keys","some","undefined","Array","isArray","includes","getRandomNumber","min","max","Math","floor","random","getBody","req","parse","e","fn","res","ctx","Promise","resolve","setTimeout","getDelay","init","db","map","i","overrides","faker","name","internet","userName","image","followingUserIds","createUser","posts","reduce","result","authorUserId","lorem","sentence","createdTime","date","past","createPost","log","findUsers","fulltext","field","toLowerCase","rest","put","values","assign","success","updateUser","userPosts","author","pop","sort","b","findPosts","push","Date","get","findFollowers","acc","parseInt","useFollowing","userId","refetch","UsersList","update","queryKey","userPostsQueryKey","useMutation","updatedValues","onMutate","loggedUserData","queryCache","getQueryData","loggedUserUpdated","produce","draft","setQueryData","variables","onSettled","invalidateQueries","useUpdate","history","useHistory","isFollowing","List","style","width","ListItem","cursor","ListItemIcon","ListItemText","hideButton","ListItemSecondaryAction","my","emptyMessage","FollowingList","alignItems","maxHeight","overflow","canEdit","marginTop","ButtonBack","goBack","aria-label","ArrowBack","FollowScreen","useParams","PostShell","marginLeft","Post","Boolean","LinkRoute","fontWeight","usePosts","retry","PostLoading","useTheme","Skeleton","avatarStyles","PostsListLoading","PostsList","empty","ProfileScreen","SearchUsers","useState","setText","useEffect","TextField","onChange","target","label","SearchUsersScreen","CreatePost","onSuccess","useCreatePost","TextareaAutosize","rowsMax","placeholder","padding","border","disabled","WallScreen","Grid","container","justify","item","xs","py","Hidden","smDown","md","Router","basename","process","exact","path","worker","setupWorker","handlers","start","serviceWorker","url","msw","mockServiceWorker","queryConfig","queries","refetchOnWindowFocus","App","ErrorBoundary","config","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.87ad97ae.chunk.js","sourcesContent":["import React from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles'\n\nconst isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fff3e0',\n    },\n    secondary: {\n      main: '#fce4ec',\n    },\n    type: isDarkMode ? 'dark' : 'light',\n  },\n})\n\nexport const ThemeProvider = (props) => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      {props.children}\n    </MuiThemeProvider>\n  )\n}\n","export class CustomError extends Error {\n  /**\n   * @param {String} message Internal message/type/etc\n   * @param {Object} props May include props: {String} text: User facing error message; {String} heading: User facing error heading\n   */\n  constructor(message, props) {\n    super(message)\n    this.props = props\n  }\n}\n","import LocalizedStrings from 'react-localization'\n\nexport default new LocalizedStrings({\n  en: {\n    latestPosts: 'Latest posts',\n    home: 'Home',\n    notFollowingAnybodySelf: \"You are not following anybody yet. Let's change it!\",\n    notFollowingAnybody: 'The user is not following anybody',\n    addPeople: 'Add People',\n    searchPeopleInput: 'Search people',\n    follow: 'Follow',\n    unfollow: 'Unfollow',\n    whatsHappening: \"What's happening?\",\n    post: 'Post',\n    somethingWentWrong: 'Something went wrong',\n    reloadPage: 'Please reload the page',\n    reload: 'Reload',\n    userNotFound: 'User not found',\n    emptyUsers: 'No users',\n    userNotFoundDescription:\n      'You are probably opening a profile of a user which does not exist anymore because the database is refreshed on every run.',\n    following: 'Following',\n    noPosts: 'No posts',\n  },\n})\n","import React from 'react'\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport { CustomError } from 'components/error/CustomError'\nimport i18n from 'i18n'\n\nexport default ({ children }) => {\n  const onReset = () => {\n    window.location = '/'\n  }\n  const onError = () => {\n    console.info('Sending error to external logging service.') // I would use Sentry or something similar\n  }\n  return (\n    <ErrorBoundary FallbackComponent={getFallbackComponent} onReset={onReset} onError={onError}>\n      {children}\n    </ErrorBoundary>\n  )\n}\n\nconst getFallbackComponent = ({ error, resetErrorBoundary }) => {\n  let heading = i18n.somethingWentWrong\n  let text = i18n.reloadPage\n  if (error instanceof CustomError) {\n    heading = error.props.heading\n    text = error.props.text\n  }\n  return (\n    <Dialog\n      open\n      disableBackdropClick\n      disableEscapeKeyDown\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      maxWidth=\"xs\"\n      fullWidth\n    >\n      <DialogTitle id=\"alert-dialog-title\">{heading}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">{text}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={resetErrorBoundary} autoFocus>\n          {i18n.reload}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\n\nexport const userContext = React.createContext(null)\n","import React from 'react'\nimport produce from 'immer'\nimport { queryCache, useMutation, useQuery } from 'react-query'\nimport { userContext } from 'components/user/UserContext'\n\nexport const useLoggedUser = () => {\n  const loggedUser = React.useContext(userContext)\n  return loggedUser\n}\n\nexport const useUsers = (params = {}, options = {}) => {\n  return useQuery(\n    ['users', params],\n    async (key, body) => {\n      const response = await fetch('/users', {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      const users = await response.json()\n      if (options.unique) {\n        if (users.length !== 1) {\n          throw new Error('Error fetching user')\n        }\n        return users[0]\n      }\n      return users\n    },\n    {\n      enabled: !options.manual,\n    }\n  )\n}\n\nexport const useUser = (params, options = {}) => {\n  return useUsers(params, { ...options, unique: true })\n}\n\nexport const useUpdate = () => {\n  const loggedUser = useLoggedUser()\n  const queryKey = ['users', { id: loggedUser.id }]\n  const userPostsQueryKey = ['posts', { authorUserId: [loggedUser.id, ...loggedUser.followingUserIds] }]\n\n  const [mutate] = useMutation(\n    async (updatedValues) => {\n      const body = {\n        id: loggedUser.id,\n        ...updatedValues,\n      }\n      const response = await fetch('/users', {\n        method: 'PUT',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      return response.json()\n    },\n    {\n      onMutate: (updatedValues) => {\n        // queryCache.cancelQueries(queryKey)\n\n        const loggedUserData = queryCache.getQueryData(queryKey)\n\n        const loggedUserUpdated = produce(loggedUserData, (draft) => {\n          Object.assign(draft, updatedValues)\n        })\n\n        queryCache.setQueryData(queryKey, loggedUserUpdated)\n\n        return { loggedUserData }\n      },\n      // On failure, roll back to the previous value\n      onError: (error, variables, { loggedUserData }) => {\n        queryCache.setQueryData(queryKey, loggedUserData)\n      },\n      // After success or failure, refetch\n      onSettled: () => {\n        queryCache.invalidateQueries(queryKey)\n        queryCache.invalidateQueries(userPostsQueryKey)\n      },\n    }\n  )\n  return mutate\n}\n","export const getProfileUrl = (user) => `/${user.handle}`\nexport const getFullName = (user) => [user.firstName, user.lastName].join(' ')\n","import React from 'react'\nimport { AppBar, Avatar, IconButton, makeStyles, Toolbar, Typography } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { useLoggedUser } from 'components/user/userHooks'\nimport { getProfileUrl } from 'components/user/userUtils'\n\nexport const Header = (props) => {\n  const classes = useStyles()\n  const loggedUser = useLoggedUser()\n\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"default\">\n        <Toolbar>\n          {props.leftButton && <props.leftButton />}\n          <Typography variant=\"h6\" className={classes.title}>\n            {props.title}\n          </Typography>\n          {loggedUser && (\n            <IconButton to={getProfileUrl(loggedUser)} color=\"inherit\" component={Link}>\n              <Avatar src={loggedUser.avatar} />\n            </IconButton>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  leftButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}))\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { Header } from 'components/Header'\n\nexport const AppShell = (props = {}) => {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" height={1}>\n      <Header {...props.header} />\n      <Box flex=\"0 1 auto\">\n        <Box height={64} />\n      </Box>\n      <Box display=\"flex\" flex=\"1 1 auto\" justifyContent=\"center\" p={1}>\n        {props.children}\n      </Box>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { AppShell } from 'components/AppShell'\nimport { CustomError } from 'components/error/CustomError'\nimport { userContext } from 'components/user/UserContext'\nimport { useUser } from 'components/user/userHooks'\n\nexport const UserProvider = ({ children }) => {\n  const loggedUser = useUser({ id: 1 })\n  const { Provider } = userContext\n\n  if (loggedUser.isLoading) {\n    return <AppShell />\n  }\n\n  if (loggedUser.isError) {\n    throw new CustomError({ heading: 'Ooops', text: 'Logged user not found' })\n  }\n\n  return <Provider value={loggedUser.data}>{children}</Provider>\n}\n","export const db = {}\nexport const USERS_COUNT = 10\nexport const MAX_DELAY = 1000\n\n// Returns global variable\nexport const getDb = () => {\n  if (!window.__lookiterDb) window.__lookiterDb = {}\n  return window.__lookiterDb\n}\n\n// Checks if all keys in params are equal in the resource\n// In case of array it matches ir=f at least one element matches\nexport const matchAll = (resource, params) => {\n  return resource.filter((r) => {\n    return !Object.keys(params).some((key) => {\n      if (params[key] === undefined) return false\n      if (Array.isArray(params[key])) {\n        return !params[key].includes(r[key])\n      }\n      return r[key] !== params[key]\n    })\n  })\n}\n\nexport const paramsToInt = (params) => {\n  return Object.keys(params).reduce((acc, key) => {\n    acc[key] = parseInt(params[key])\n    return acc\n  }, {})\n}\n\nexport const getRandomNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min)\n}\n\n// in node the body is string but in browser it's an object\nexport const getBody = (req) => {\n  let body = req.body\n  try {\n    body = JSON.parse(req.body)\n  } catch (e) {}\n  return body\n}\n\nexport const response = (fn) => (req, res, ctx) => {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(res(ctx.json(fn(req, res, ctx)))), getDelay())\n  })\n}\n\nconst getDelay = () => getRandomNumber(5, MAX_DELAY)\n","import { getDb, matchAll, getRandomNumber, USERS_COUNT } from 'mock/mockUtils'\nimport { createPost } from 'mock/postMock'\nimport { createUser } from 'mock/userMock'\n\nexport const init = () => {\n  const db = getDb()\n  db.users = [...Array(USERS_COUNT).keys()].map((i) => {\n    const id = i + 1\n    return createUser({\n      id,\n      // followingUserIds: id === 1 ? [] : [getRandomNumber(2, USERS_COUNT)].filter((num) => num !== id),\n      followingUserIds: [],\n    })\n  })\n  db.posts = db.users.reduce((result, { id }) => {\n    return [...result, ...[...Array(5).keys()].map((i) => createPost({ id: i + result.length + 1, authorUserId: id }))]\n  }, [])\n  console.log('🛎 ', 'db', db)\n}\n\nexport const findUsers = ({ fulltext, ...params } = {}) => {\n  let users = matchAll(getDb().users, params)\n  if (fulltext) {\n    users = users.filter((user) => {\n      const fields = [user.firstName, user.lastName, user.handle].map((field) => field.toLowerCase())\n      return fields.some((field) => field.includes(fulltext.toLowerCase()))\n    })\n  }\n  return users\n}\n\nexport const findFollowers = ({ id } = {}) => {\n  return matchAll(getDb().users, { id })[0]\n}\n\nexport const findPosts = ({ authorUserId } = {}) => {\n  const posts = matchAll(getDb().posts, { authorUserId })\n  const userPosts = posts.map((post) => {\n    const author = findUsers({ id: post.authorUserId }).pop()\n    return {\n      ...post,\n      author, // \"JOIN\" post with user\n    }\n  })\n  userPosts.sort((a, b) => (a.createdTime > b.createdTime ? -1 : 1))\n  return userPosts\n}\n\nexport const savePost = (post) => {\n  getDb().posts.push({ ...post, id: getDb().posts.length + 1, createdTime: new Date() }) // Mutate\n  return { success: true }\n}\n\nexport const updateUser = ({ id, ...values }) => {\n  const user = findUsers({ id })[0]\n  Object.assign(user, values) // Mutate\n  return { success: true }\n}\n","import faker from 'faker'\n\nexport const createUser = (overrides = {}) => {\n  return {\n    id: 1,\n    firstName: faker.name.firstName(),\n    lastName: faker.name.lastName(),\n    handle: faker.internet.userName(),\n    avatar: faker.image.avatar(),\n    followingUserIds: [],\n    ...overrides,\n  }\n}\n","import faker from 'faker'\n\nexport const createPost = (overrides = {}) => {\n  return {\n    id: 1,\n    authorUserId: 1,\n    text: faker.lorem.sentence(),\n    createdTime: faker.date.past(),\n    ...overrides,\n  }\n}\n","import { rest } from 'msw'\nimport { findUsers, findPosts, findFollowers, updateUser, savePost } from 'mock/db'\nimport { paramsToInt, getBody, response } from 'mock/mockUtils'\n\nexport default [\n  rest.post(\n    '*/users',\n    response((req) => findUsers(getBody(req)))\n  ),\n\n  rest.put(\n    '*/users',\n    response((req) => updateUser(getBody(req)))\n  ),\n\n  rest.post(\n    '*/posts',\n    response((req) => findPosts(getBody(req)))\n  ),\n\n  rest.put(\n    '*/posts',\n    response((req) => savePost(getBody(req)))\n  ),\n\n  rest.get(\n    '*/followers/:id',\n    response((req) => findFollowers(paramsToInt(req.params)))\n  ),\n]\n","import { useUser, useUsers } from 'components/user/userHooks'\n\nexport const useFollowing = (params = {}) => {\n  const user = useUser({ id: params.userId })\n  const users = useUsers({ id: user.data && user.data.followingUserIds }, { manual: true })\n  if (user.data && !users.data) {\n    users.refetch()\n  }\n  return users\n}\n","import React from 'react'\nimport {\n  Avatar,\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n} from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport { useLoggedUser, useUpdate } from 'components/user/userHooks'\nimport { getFullName, getProfileUrl } from 'components/user/userUtils'\nimport i18n from 'i18n'\n\nexport const UsersList = (props) => {\n  const loggedUser = useLoggedUser()\n  const update = useUpdate()\n  const history = useHistory()\n\n  const toggleFollow = (userId) => () => {\n    let followingUserIds = loggedUser.followingUserIds\n    if (isFollowing(userId)) {\n      followingUserIds = followingUserIds.filter((id) => id !== userId)\n    } else {\n      followingUserIds = [...loggedUser.followingUserIds, userId]\n    }\n    update({ followingUserIds })\n  }\n  const isFollowing = (userId) => loggedUser.followingUserIds.includes(userId)\n\n  if (!props.users.length) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" my={3}>\n        {props.emptyMessage || i18n.emptyUsers}\n      </Box>\n    )\n  }\n\n  return (\n    <List style={{ width: '100%' }}>\n      {props.users.map((user) => (\n        <ListItem key={user.id} onClick={() => history.push(getProfileUrl(user))} style={{ cursor: 'pointer' }}>\n          <ListItemIcon>\n            <Avatar src={user.avatar} />\n          </ListItemIcon>\n          <ListItemText>\n            <Typography>{getFullName(user)}</Typography>\n            <Typography>@{user.handle}</Typography>\n          </ListItemText>\n          {!props.hideButton && (\n            <ListItemSecondaryAction>\n              <Button variant=\"outlined\" onClick={toggleFollow(user.id)}>\n                {isFollowing(user.id) ? i18n.unfollow : i18n.follow}\n              </Button>\n            </ListItemSecondaryAction>\n          )}\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n","import React from 'react'\nimport { Box, Button } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { useFollowing } from 'components/followingList/followingListHooks'\nimport { UsersList } from 'components/user/UsersList'\nimport i18n from 'i18n'\n\nexport const FollowingList = (props = {}) => {\n  const following = useFollowing(props.filter)\n\n  if (following.isLoading || !following.data) {\n    return ''\n  }\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" width={1} alignItems=\"center\">\n      <Box width={1} maxHeight={props.maxHeight} overflow=\"scroll\">\n        <UsersList users={following.data} emptyMessage={props.emptyMessage} hideButton={props.hideButton} />\n      </Box>\n      {props.canEdit && (\n        <Box display=\"flex\" justifyContent=\"center\" marginTop={1}>\n          <Button variant=\"contained\" to=\"/search-people\" component={Link}>\n            {i18n.addPeople}\n          </Button>\n        </Box>\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { IconButton } from '@material-ui/core'\nimport { ArrowBack } from '@material-ui/icons'\nimport { useHistory } from 'react-router-dom'\n\nexport const ButtonBack = (props) => {\n  const history = useHistory()\n\n  return (\n    <IconButton onClick={history.goBack} aria-label=\"back\">\n      <ArrowBack />\n    </IconButton>\n  )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { AppShell } from 'components/AppShell'\nimport { CustomError } from 'components/error/CustomError'\nimport { FollowingList } from 'components/followingList/FollowingList'\nimport { ButtonBack } from 'components/header/ButtonBack'\nimport { useLoggedUser, useUser } from 'components/user/userHooks'\nimport i18n from 'i18n'\n\nexport const FollowScreen = () => {\n  const loggedUser = useLoggedUser()\n  let { handle } = useParams()\n  const user = useUser({ handle })\n\n  if (user.isError) {\n    throw new CustomError(user.error.message, { heading: i18n.userNotFound, text: i18n.userNotFoundDescription })\n  }\n\n  return (\n    <AppShell header={{ leftButton: ButtonBack, title: i18n.following }}>\n      {user.data && (\n        <FollowingList\n          filter={{ userId: user.data.id }}\n          canEdit={user.data.id === loggedUser.id}\n          emptyMessage={user.data.id === loggedUser.id ? i18n.notFollowingAnybodySelf : i18n.notFollowingAnybody}\n        />\n      )}\n    </AppShell>\n  )\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\n\nexport const PostShell = (props) => {\n  return (\n    <Box my={2} display=\"flex\">\n      <Box display=\"flex\" justifyContent=\"center\" width={80}>\n        {props.avatar()}\n      </Box>\n\n      <Box width={1}>\n        <Box display=\"flex\">\n          {props.name()}\n          <Box marginLeft={1}>{props.handle()}</Box>\n        </Box>\n        {props.text()}\n      </Box>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Avatar, Typography, Link } from '@material-ui/core'\nimport { Link as LinkRoute } from 'react-router-dom'\nimport { PostShell } from 'components/post/PostShell'\nimport { getProfileUrl } from 'components/user/userUtils'\n\nexport const Post = (props) => {\n  const name = [props.author.firstName, props.author.lastName].filter(Boolean).join(' ')\n  return (\n    <PostShell\n      avatar={() => <Avatar src={props.author.avatar} />}\n      name={() => (\n        <Link to={getProfileUrl(props.author)} component={LinkRoute} color=\"inherit\">\n          <Typography component=\"strong\" style={{ fontWeight: 600 }}>\n            {name}\n          </Typography>\n        </Link>\n      )}\n      handle={() => <Typography>@{props.author.handle}</Typography>}\n      text={() => <Typography>{props.text}</Typography>}\n    />\n  )\n}\n","import { useQuery } from 'react-query'\nimport { useParams } from 'react-router-dom'\n\nexport const usePosts = (params = {}) => {\n  return useQuery(\n    ['posts', params],\n    async (key, { userId, authorUserId }) => {\n      const body = {\n        ...(userId && { userId }),\n        ...(authorUserId && { authorUserId }),\n      }\n      const response = await fetch('/posts', {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      return response.json()\n    },\n    {\n      retry: 0,\n    }\n  )\n}\n","import React from 'react'\nimport { useTheme } from '@material-ui/core'\nimport { styles as avatarStyles } from '@material-ui/core/Avatar/Avatar'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport { PostShell } from 'components/post/PostShell'\nimport { getRandomNumber } from 'mock/mockUtils'\n\nexport const PostLoading = (props) => {\n  const theme = useTheme()\n  return (\n    <PostShell\n      avatar={() => (\n        <Skeleton variant=\"circle\" width={avatarStyles(theme).root.width} height={avatarStyles(theme).root.height} />\n      )}\n      name={() => <Skeleton variant=\"text\" width={getRandomNumber(60, 120)} />}\n      handle={() => <Skeleton variant=\"text\" width={getRandomNumber(60, 120)} />}\n      text={() => <Skeleton variant=\"text\" width={`${getRandomNumber(30, 90)}%`} />}\n    />\n  )\n}\n","import React from 'react'\nimport { PostLoading } from 'components/post/PostLoading'\n\nexport const PostsListLoading = () => {\n  return [...Array(5).keys()].map((i) => <PostLoading key={i} />)\n}\n","import React from 'react'\nimport { Post } from 'components/post/Post'\nimport { usePosts } from 'components/postsList/postsListHooks'\nimport { PostsListLoading } from 'components/postsList/PostsListLoading'\nimport i18n from 'i18n'\n\nexport const PostsList = (props = {}) => {\n  const posts = usePosts(props.filter)\n\n  if (posts.isLoading) {\n    return <PostsListLoading />\n  }\n\n  if (posts.data.length === 0) {\n    if (props.empty) {\n      return props.empty()\n    }\n    return i18n.noPosts\n  }\n\n  return (\n    <>\n      {posts.data.map((post) => (\n        <Post key={post.id} {...post} />\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport { Avatar, Box, Link, Typography } from '@material-ui/core'\nimport { Link as LinkRoute } from 'react-router-dom'\nimport { useParams } from 'react-router-dom'\nimport { AppShell } from 'components/AppShell'\nimport { CustomError } from 'components/error/CustomError'\nimport { ButtonBack } from 'components/header/ButtonBack'\nimport { PostsList } from 'components/postsList/PostsList'\nimport { useUser } from 'components/user/userHooks'\nimport { getFullName, getProfileUrl } from 'components/user/userUtils'\nimport i18n from 'i18n'\n\nexport const ProfileScreen = () => {\n  let { handle } = useParams()\n  const user = useUser({ handle })\n\n  if (user.isError) {\n    throw new CustomError(user.error.message, { heading: i18n.userNotFound, text: i18n.userNotFoundDescription })\n  }\n\n  return (\n    <AppShell header={{ leftButton: ButtonBack }}>\n      {user.data && (\n        <Box width={1} maxWidth={600}>\n          <Box display=\"flex\" justifyContent=\"center\" my={1}>\n            <Avatar src={user.data.avatar} style={{ height: '150px', width: '150px' }} />\n          </Box>\n          <Typography variant=\"h4\">{getFullName(user.data)}</Typography>\n          <Typography>@{user.data.handle}</Typography>\n\n          <Link to={`${getProfileUrl(user.data)}/following`} color=\"inherit\" component={LinkRoute}>\n            <Typography component=\"span\">\n              <strong>{user.data.followingUserIds.length}</strong> {i18n.following}\n            </Typography>\n          </Link>\n          <PostsList filter={{ authorUserId: [user.data.id] }} />\n        </Box>\n      )}\n    </AppShell>\n  )\n}\n","import React from 'react'\nimport { Box, TextField } from '@material-ui/core'\nimport { PostsListLoading } from 'components/postsList/PostsListLoading'\nimport { useLoggedUser, useUsers } from 'components/user/userHooks'\nimport i18n from 'i18n'\nimport { UsersList } from './UsersList'\n\nexport const SearchUsers = () => {\n  const loggedUser = useLoggedUser()\n  const [text, setText] = React.useState('')\n  const users = useUsers({ fulltext: text }, { manual: true })\n  const { refetch } = users\n\n  const search = ({ target }) => {\n    setText(target.value)\n  }\n\n  React.useEffect(() => {\n    if (!text) return\n    refetch()\n  }, [text, refetch])\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" width={1} alignItems=\"center\">\n      <TextField value={text} onChange={search} label={i18n.searchPeopleInput} />\n      {users.isLoading || (text && !users.data) ? (\n        <Box width={1}>\n          <PostsListLoading />\n        </Box>\n      ) : (\n        text && <UsersList users={users.data.filter((user) => user.id !== loggedUser.id)} />\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { AppShell } from 'components/AppShell'\nimport { ButtonBack } from 'components/header/ButtonBack'\nimport { SearchUsers } from 'components/user/SearchUsers'\nimport i18n from 'i18n'\n\nexport const SearchUsersScreen = () => {\n  return (\n    <AppShell header={{ leftButton: ButtonBack, title: i18n.addPeople }}>\n      <Box width={1} maxWidth={600}>\n        <SearchUsers />\n      </Box>\n    </AppShell>\n  )\n}\n","import React from 'react'\nimport { Avatar, Box, Button, Divider, Grid, TextareaAutosize } from '@material-ui/core'\nimport { useCreatePost } from 'components/createPost/createPostHooks'\nimport { useLoggedUser } from 'components/user/userHooks'\nimport i18n from 'i18n'\n\nexport const CreatePost = (props) => {\n  const loggedUser = useLoggedUser()\n  const createPost = useCreatePost()\n  const [text, setText] = React.useState('')\n\n  const submit = () => {\n    createPost(text)\n    setText('')\n  }\n\n  const onTextChange = ({ target }) => {\n    setText(target.value)\n  }\n\n  React.useEffect(() => {}, [text])\n\n  return (\n    <Box display=\"flex\">\n      <Box display=\"flex\" justifyContent=\"center\" width=\"80px\">\n        <Avatar src={loggedUser.avatar} />\n      </Box>\n\n      <Box width={1}>\n        <TextareaAutosize\n          value={text}\n          rowsMax={3}\n          aria-label=\"Create post\"\n          placeholder={i18n.whatsHappening}\n          onChange={onTextChange}\n          style={{ width: '100%', padding: '10px 0px 10px 0px', border: 'none' }}\n        />\n\n        <Box display=\"flex\" justifyContent=\"flex-end\">\n          <Button variant=\"outlined\" onClick={submit} disabled={!text}>\n            {i18n.post}\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import { queryCache, useMutation } from 'react-query'\nimport { useLoggedUser } from 'components/user/userHooks'\n\nexport const useCreatePost = () => {\n  const loggedUser = useLoggedUser()\n\n  const [mutate] = useMutation(\n    async (text) => {\n      const body = {\n        text,\n        authorUserId: loggedUser.id,\n      }\n      const response = await fetch('/posts', {\n        method: 'PUT',\n        body: JSON.stringify(body),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      return response.json()\n    },\n    {\n      onSuccess: () => {\n        queryCache.invalidateQueries(['posts', { authorUserId: [loggedUser.id, ...loggedUser.followingUserIds] }])\n      },\n    }\n  )\n  return mutate\n}\n","import React from 'react'\nimport { Box, Grid, Hidden, Typography } from '@material-ui/core'\nimport { AppShell } from 'components/AppShell'\nimport { CreatePost } from 'components/createPost/CreatePost'\nimport { FollowingList } from 'components/followingList/FollowingList'\nimport { PostsList } from 'components/postsList/PostsList'\nimport { useLoggedUser } from 'components/user/userHooks'\nimport i18n from 'i18n'\n\nexport const WallScreen = () => {\n  const loggedUser = useLoggedUser()\n\n  return (\n    <AppShell header={{ title: i18n.home }}>\n      <Grid container justify=\"center\" spacing={3}>\n        <Grid item xs style={{ maxWidth: '600px' }}>\n          <Box py={2}>\n            <CreatePost />\n          </Box>\n          <PostsList\n            filter={{ authorUserId: [loggedUser.id, ...loggedUser.followingUserIds] }}\n            empty={() => <FollowingList filter={{ userId: loggedUser.id }} />}\n          />\n        </Grid>\n        <Hidden smDown>\n          <Grid item md={4}>\n            <Typography variant=\"h6\">{i18n.following}</Typography>\n            <FollowingList filter={{ userId: loggedUser.id }} canEdit hideButton maxHeight={300} />\n          </Grid>\n        </Hidden>\n      </Grid>\n    </AppShell>\n  )\n}\n","import React from 'react'\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom'\nimport { FollowScreen } from 'screens/FollowScreen'\nimport { ProfileScreen } from 'screens/ProfileScreen'\nimport { SearchUsersScreen } from 'screens/SearchUsersScreen'\nimport { WallScreen } from 'screens/WallScreen'\n\nexport const Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <WallScreen />\n        </Route>\n        <Route path=\"/search-people\">\n          <SearchUsersScreen />\n        </Route>\n        <Route path=\"/:handle/following\">\n          <FollowScreen />\n        </Route>\n        <Route path=\"/:handle\">\n          <ProfileScreen />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n","import { setupWorker, rest } from 'msw'\nimport { init } from 'mock/db'\nimport handlers from 'mock/serverHandlers'\n\nexport const mockServiceWorker = () => {\n  const worker = setupWorker(...handlers)\n  worker.start({\n    serviceWorker: {\n      // Points to the custom location of the Service Worker file.\n      url: '/lookitter/mockServiceWorker.js',\n    },\n  })\n  init()\n  window.msw = { worker, rest } // To be able to access it in tests\n}\n","import React from 'react'\nimport { ReactQueryConfigProvider } from 'react-query'\nimport { ThemeProvider } from 'components/app/ThemeProvider'\nimport ErrorBoundary from 'components/error/ErrorBoundary'\nimport { UserProvider } from 'components/user/UserProvider'\nimport { mockServiceWorker } from 'mock/mockServiceWorker'\nimport { Router } from 'Router'\n\nmockServiceWorker() // Run mock API\n\nconst queryConfig = {\n  queries: {\n    retry: 0,\n    refetchOnWindowFocus: false,\n  },\n}\n\nexport const App = () => {\n  return (\n    <ThemeProvider>\n      <ErrorBoundary>\n        <ReactQueryConfigProvider config={queryConfig}>\n          <UserProvider>\n            <Router />\n          </UserProvider>\n        </ReactQueryConfigProvider>\n      </ErrorBoundary>\n    </ThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from 'App'\nimport 'index.css'\nimport * as serviceWorker from 'serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}